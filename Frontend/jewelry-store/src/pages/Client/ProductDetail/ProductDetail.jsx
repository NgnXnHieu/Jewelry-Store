import React, { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";
import styles from "./ProductDetail.module.css";
import { FaStar, FaRegStar, FaHeart } from "react-icons/fa";
import { getProductById, getRelatedProducts } from "../../../api/productApi"; // ch·ªâ l·∫•y chi ti·∫øt s·∫£n ph·∫©m
import { addToCart } from "../../../api/cartApi";

function ProductDetail() {
    const { id } = useParams();
    const navigate = useNavigate();

    const [product, setProduct] = useState(null);
    const [relatedProducts, setRelatedProducts] = useState([]);
    const [favorite, setFavorite] = useState(false);
    const [quantity, setQuantity] = useState(1);





    useEffect(() => {
        getProductById(id)
            .then((data) => {
                console.log("Chi ti·∫øt s·∫£n ph·∫©m t·ª´ backend:", data);
                setProduct(data);
            })
            .catch((err) => console.error("L·ªói khi t·∫£i s·∫£n ph·∫©m:", err));

        // L·∫•y s·∫£n ph·∫©m li√™n quan
        getRelatedProducts(id)
            .then((data) => {
                console.log("D·ªØ li·ªáu s·∫£n ph·∫©m li√™n quan t·ª´ backend:", data);
                if (data && data.content) {
                    setRelatedProducts(data.content);
                    console.log("relatedProducts ƒë√£ set:", data.content);
                } else {
                    setRelatedProducts([]);
                    console.log("relatedProducts r·ªóng v√¨ backend kh√¥ng tr·∫£ v·ªÅ content");
                }
            })
            .catch((err) => console.error("L·ªói khi t·∫£i s·∫£n ph·∫©m li√™n quan:", err));

    }, [id]);

    const handleAddToCart = async (product) => {
        // console.log("Th√™m v√†o gi·ªè:", product);
        try {
            const res = await addToCart(product.id, quantity);
            console.log("ƒê√£ th√™m v√†o gi·ªè h√†ng:", res);
            alert("‚úÖ ƒê√£ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng!");
        } catch (err) {
            console.error("L·ªói khi th√™m v√†o gi·ªè:", err);

            if (err.response?.status === 401) {
                alert("‚ùå B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p tr∆∞·ªõc khi th√™m v√†o gi·ªè!");
                navigate("/login");
            } else {
                alert("‚ùå Kh√¥ng th·ªÉ th√™m s·∫£n ph·∫©m v√†o gi·ªè!");
            }
        }
    };
    //X·ª≠ l√Ω n√∫t mua
    const handleBuyNow = () => {
        // T·∫°o d·ªØ li·ªáu c·∫ßn chuy·ªÉn sang trang Checkout
        const productData = [
            {
                id: product.id,
                quantity: quantity,
            },
        ];

        // D·∫´n h∆∞·ªõng sang trang checkout, truy·ªÅn d·ªØ li·ªáu qua state
        navigate("/checkout", { state: { items: productData } });
    };


    // TƒÉng/gi·∫£m s·ªë l∆∞·ª£ng
    const increase = () => {
        setQuantity((prev) => prev + 1);
    };

    const decrease = () => {
        setQuantity((prev) => (prev > 1 ? prev - 1 : 1));
    };


    if (!product) return <p>ƒêang t·∫£i s·∫£n ph·∫©m...</p>;

    const specList = product.description ? product.description.split(",").map(s => s.trim()) : [];

    return (
        <div className={styles.container}>
            <div className={styles.mainSection}>
                <div className={styles.left}>
                    <div className={styles.imageBox}>
                        <img src={product.image_url} alt={product.name} className={styles.image} />
                    </div>
                    <div className={styles.buttons}>
                        <button className={styles.add} onClick={() => handleAddToCart(product)}>Th√™m v√†o gi·ªè</button>
                        <button className={styles.buy} onClick={handleBuyNow}>Mua ngay</button>
                    </div>
                </div>

                <div className={styles.right}>
                    <h2 className={styles.productName}>{product.name}</h2>
                    <div className={styles.rating}>
                        {[...Array(4)].map((_, i) => <FaStar key={i} className={styles.star} />)}
                        <FaRegStar className={styles.star} />
                        <span>(0 ƒë√°nh gi√°)</span>
                    </div>
                    <div className={styles.price}>{product.price.toLocaleString()}ƒë</div>
                    {/* üëá Th√™m kh·ªëi tƒÉng gi·∫£m s·ªë l∆∞·ª£ng */}
                    <div className={styles.quantityBox}>
                        <button onClick={decrease}>-</button>
                        <span>{quantity}</span>
                        <button onClick={increase}>+</button>
                    </div>
                    <div className={styles.infoRow}>
                        <span>C√≤n l·∫°i: {product.quantity}</span>

                    </div>



                    <h3 className={styles.sectionTitle}>Th√¥ng tin chi ti·∫øt</h3>
                    <ul className={styles.specList}>
                        {specList.map((spec, idx) => <li key={idx}>{spec}</li>)}
                    </ul>
                </div>
            </div>

            <div className={styles.relatedSection}>
                <h3 className={styles.relatedTitle}>S·∫£n ph·∫©m li√™n quan</h3>
                <div className={styles.relatedList}>
                    {relatedProducts.map((p) => (
                        <div key={p.id} className={styles.relatedItem}>
                            <img src={p.image_url} alt={p.name} />
                            <p className={styles.relatedName}>{p.name}</p>
                            <p className={styles.relatedPrice}>{p.price.toLocaleString()}ƒë</p>
                            <button
                                className={styles.viewButton}
                                onClick={() => navigate(`/productdetail/${p.id}`)}
                            >
                                Xem chi ti·∫øt
                            </button>
                        </div>
                    ))}
                </div>
            </div>
        </div>
    );
}

export default ProductDetail;
